<#
.SYNOPSIS
    This PowerShell script Turn off Internet download for Web publishing and online ordering wizards.

.NOTES
    Author          : Felix
    LinkedIn        : linkedin.com/in/somuadina-amadi-599348333/
    GitHub          : github.com/felix2470/
    Date Created    : 4/20/2025
    Last Modified   : 4/20/2025
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-CC-000105

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
   
Steps to Run the Script in PowerShell ISE:
Open PowerShell ISE as Administrator:
Click Start, type powershell ise
Right-click Windows PowerShell ISE
Select “Run as administrator”
This is important because the script writes to HKLM, which requires elevated privileges.
Paste the Script into the script pane (top section of ISE).
Click Run (▶️ F5) or press F5 on your keyboard.
Check the output in the bottom console pane — you should see:
#>
# ------------------------------------------------------------
# Fix STIG ID: WN10-CC-000105
# Policy: Turn off Internet download for Web publishing and online ordering wizards
# Scope: Computer Configuration
# Registry Location: HKLM
# ------------------------------------------------------------
#-- CODE 👇--

$registryPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer"
$valueName = "NoWebServices"
$desiredValue = 1

try {
    # Ensure the registry path exists
    if (-not (Test-Path $registryPath)) {
        Write-Output "Registry path does not exist. Creating it..."
        New-Item -Path $registryPath -Force | Out-Null
    }

    # Get current value (if it exists)
    $currentValue = Get-ItemProperty -Path $registryPath -Name $valueName -ErrorAction SilentlyContinue | Select-Object -ExpandProperty $valueName -ErrorAction SilentlyContinue

    if ($currentValue -ne $desiredValue) {
        Write-Output "Setting $valueName to $desiredValue at $registryPath..."
        Set-ItemProperty -Path $registryPath -Name $valueName -Value $desiredValue -Type DWord
        Write-Output "STIG setting applied successfully."
    } else {
        Write-Output "STIG setting already compliant: $valueName = $desiredValue"
    }
} catch {
    Write-Error "An error occurred while applying the STIG setting: $_"
}
