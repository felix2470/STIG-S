<#
.SYNOPSIS
    This PowerShell script Ensure  that Windows 10 is configured to prioritize ECC Curves with longer key lengths 

.NOTES
    Author          : Felix
    LinkedIn        : linkedin.com/in/somuadina-amadi-599348333/
    GitHub          : github.com/felix2470/
    Date Created    : 4/23/2025
    Last Modified   : 4/23/2025
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-CC-000052 

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
   
Steps to Run the Script in PowerShell ISE:
Click Start, type powershell ise
Right-click Windows PowerShell ISE
Select “Run as administrator”
This is important because the script writes to HKLM, which requires elevated privileges.
Paste the Script into the script pane (top section of ISE).
Click Run (▶️ F5) or press F5 on your keyboard.
Check the output in the bottom console pane — you should see:
#----------------------------------------------------------
#-- CODE 👇--
#-----------------------------------------------------------------------------------------------

# PowerShell Script to Set EccCurves for Compliance

$registryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Cryptography\Configuration\SSL\00010002"
$valueName = "EccCurves"
# Explicitly declare string array
$desiredValues = [string[]]@("NistP384", "NistP256")

# Create the registry path if it does not exist
if (-not (Test-Path $registryPath)) {
    Write-Host "Registry path does not exist. Creating path..."
    New-Item -Path $registryPath -Force | Out-Null
}

# Check current value
$currentValue = Get-ItemProperty -Path $registryPath -Name $valueName -ErrorAction SilentlyContinue | Select-Object -ExpandProperty $valueName -ErrorAction SilentlyContinue

# Compare arrays (case-insensitive and order-insensitive)
if ($null -eq $currentValue -or -not ($currentValue -join ',' -ieq $desiredValues -join ',')) {
    Write-Host "Setting $valueName to required values for compliance..."
    Remove-ItemProperty -Path $registryPath -Name $valueName -ErrorAction SilentlyContinue
    New-ItemProperty -Path $registryPath -Name $valueName -Value $desiredValues -PropertyType MultiString -Force | Out-Null
} else {
    Write-Host "$valueName is already compliant. No changes needed."
}
